{"version":3,"sources":["Main.js","App.tsx","index.tsx"],"names":["Main","useState","ws","setWs","title","setTitle","chatDom","setDom","useEffect","console","log","initWebSocket","chattt","lii","document","createElement","liText","createTextNode","appendChild","on","sendMessage","name","emit","querySelector","className","onChange","event","target","value","type","onClick","webSocket","App","props","ReactDOM","render","getElementById"],"mappings":"mTAyFeA,EAtFF,WAAO,IAAD,EACKC,mBAAS,MADd,mBACRC,EADQ,KACJC,EADI,OAGWF,mBAAS,MAHpB,mBAGRG,EAHQ,KAGDC,EAHC,OAIWJ,mBAAS,MAJpB,mBAIRK,EAJQ,KAICC,EAJD,KAWfC,qBAAU,WACFN,IAEAO,QAAQC,IAAI,oBAEZC,OAGL,CAACT,IAEJ,IAAMU,EAAS,SAAAR,GACX,IAAIS,EAAMC,SAASC,cAAc,MAC7BC,EAASF,SAASG,eAAeb,GACrCS,EAAIK,YAAYF,GAChBV,EAAQY,YAAYL,IAGlBF,EAAgB,WAElBT,EAAGiB,GAAG,cAAc,SAAAf,GAChBQ,EAAOR,MAEXF,EAAGiB,GAAG,iBAAiB,SAAAf,GACnBQ,EAAOR,MAEXF,EAAGiB,GAAG,kBAAkB,SAAAf,GACpBQ,EAAOR,OAITgB,EAAc,SAAAC,GAEhBnB,EAAGoB,KAAKD,EAAMjB,IAYlB,OALAI,qBAAU,WAEND,EAAOO,SAASS,cAAc,gBAC/B,IAGC,6BACI,wBAAIC,UAAU,aACd,2BAAOC,SAZM,SAAAC,GACjBrB,EAASqB,EAAMC,OAAOC,QAWaA,MAAOxB,GAAS,KAC/C,6BACA,2BAAOyB,KAAK,SAASD,MAAM,eAAKE,QAtDf,WAErB3B,EAAM4B,IAAU,yCAqDZ,2BACIF,KAAK,SACLD,MAAM,iFACNE,QAAS,WACLV,EAAY,iBAGpB,2BACIS,KAAK,SACLD,MAAM,iFACNE,QAAS,WACLV,EAAY,oBAGpB,2BACIS,KAAK,SACLD,MAAM,yGACNE,QAAS,WACLV,EAAY,uBCnEjBY,EARuB,SAACC,GACnC,OACI,6BACI,kBAAC,EAAD,QCHZC,IAASC,OAAO,kBAAC,EAAD,MAASrB,SAASsB,eAAe,W","file":"static/js/main.eff6ec47.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport webSocket from 'socket.io-client';\r\n\r\nconst Main = () => {\r\n    const [ws, setWs] = useState(null);\r\n\r\n    const [title, setTitle] = useState(null);\r\n    const [chatDom, setDom] = useState(null);\r\n\r\n    const connectWebSocket = () => {\r\n        //開啟\r\n        setWs(webSocket('https://f2eweek007.herokuapp.com/'));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (ws) {\r\n            //連線成功在 console 中打印訊息\r\n            console.log('success connect!');\r\n            //設定監聽\r\n            initWebSocket();\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [ws]);\r\n\r\n    const chattt = title => {\r\n        let lii = document.createElement('li');\r\n        let liText = document.createTextNode(title);\r\n        lii.appendChild(liText);\r\n        chatDom.appendChild(lii);\r\n    };\r\n\r\n    const initWebSocket = () => {\r\n        //對 getMessage 設定監聽，如果 server 有透過 getMessage 傳送訊息，將會在此被捕捉\r\n        ws.on('getMessage', title => {\r\n            chattt(title);\r\n        });\r\n        ws.on('getMessageAll', title => {\r\n            chattt(title);\r\n        });\r\n        ws.on('getMessageLess', title => {\r\n            chattt(title);\r\n        });\r\n    };\r\n\r\n    const sendMessage = name => {\r\n        // ws.emit(name, '收到訊息囉！');\r\n        ws.emit(name, title);\r\n    };\r\n\r\n    const handleChange = event => {\r\n        setTitle(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // 使用瀏覽器 API 更新文件標題\r\n        setDom(document.querySelector('.chatRoot'));\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"chatRoot\"></ul>\r\n            <input onChange={handleChange} value={title || ''}></input>\r\n            <br />\r\n            <input type=\"button\" value=\"連線\" onClick={connectWebSocket} />\r\n            <input\r\n                type=\"button\"\r\n                value=\"送出訊息，只有自己收到回傳\"\r\n                onClick={() => {\r\n                    sendMessage('getMessage');\r\n                }}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                value=\"送出訊息，讓所有人收到回傳\"\r\n                onClick={() => {\r\n                    sendMessage('getMessageAll');\r\n                }}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                value=\"送出訊息，除了自己外所有人收到回傳\"\r\n                onClick={() => {\r\n                    sendMessage('getMessageLess');\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React, { FunctionComponent } from 'react';\r\nimport Main from './Main';\r\n\r\ninterface Props {}\r\n\r\ninterface State {}\r\n\r\nconst App: FunctionComponent<Props> = (props: Props) => {\r\n    return (\r\n        <div>\r\n            <Main />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport '@static/reset.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}